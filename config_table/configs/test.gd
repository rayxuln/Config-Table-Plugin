
#===============================================#
#                                               #
#      This file is auto-generated by tool      #
#              2023-04-01 04:55:12              #
#                                               #
#===============================================#

extends ConfigTable

class DataType:
	extends RefCounted
	var test_name_1: String
	var test_name_2: float
	var test_name_3: Dictionary
	var test_name_4: String

	func _init(field_value_map := {}):
		for key in field_value_map.keys():
			set(key, field_value_map[key])

func _get_data_table():
	# DataType.new({})
	return [
			DataType.new({'test_name_1': 'ä¸­æ–‡',}),
			DataType.new({'test_name_1': 'english','test_name_2': 1.23,'test_name_3': {},'test_name_4': '456456',}),
		]

func by(field_name, v) -> DataType:
	return super._by(field_name, v) as DataType

func _get_data_head_def():
	return [
		"test_name_1",
		"test_name_2",
		"test_name_3",
		"test_name_4",
	]

# func by_field1(v) -> DataType:
#   return by("field1", v)
func by_test_name_1(v) -> DataType:
	return by("test_name_1", v)

func by_test_name_2(v) -> DataType:
	return by("test_name_2", v)

func by_test_name_3(v) -> DataType:
	return by("test_name_3", v)

func by_test_name_4(v) -> DataType:
	return by("test_name_4", v)

